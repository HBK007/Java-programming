/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.ConnectDatabase;
import Model.ListMovieSeller;
import Model.Movie;
import Model.Showtimes;
import Model.User;
import Utility.Util;
import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author Nguyen Duc Hai
 */
public class MainUI extends javax.swing.JFrame {

    Connection mConnection = null;
    OraclePreparedStatement mOraclePreparedStatement;
    OracleResultSet mOracleResultSet;

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        setIcon();
    }

    public boolean checkInput() {
        if (edt_name_movie_infor.getText() == null
                || edt_year_of_manufacture.getText() == null || edt_min_year_of_age.getText() == null
                || edt_duration_movie.getText() == null || edt_movieBlockbuster.getText() == null || edt_movie_state.getText() == null
                || edt_content_movie.getText() == null || jdc_star_show_time == null || jdc_end_show_time == null) {
            return false;
        }
        return true;
    }

    public void clearInput() {
        edt_id_movie.setText("");
        edt_name_movie_infor.setText("");
        edt_year_of_manufacture.setText("");
        edt_min_year_of_age.setText("");
        edt_duration_movie.setText("");
        edt_movieBlockbuster.setText("");
        edt_movie_state.setText("");
        edt_content_movie.setText("");
        jdc_star_show_time.setDate(null);
        jdc_end_show_time.setDate(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jpan_login_logout = new javax.swing.JPanel();
        lbl_username = new javax.swing.JLabel();
        lbl_password = new javax.swing.JLabel();
        edt_username = new javax.swing.JTextField();
        cb_show_password = new javax.swing.JCheckBox();
        btn_login = new javax.swing.JToggleButton();
        btn_logout = new javax.swing.JToggleButton();
        edt_password = new javax.swing.JPasswordField();
        jpan_showtime = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        edt_name_movie_showtime = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        edt_name_threater = new javax.swing.JTextField();
        btn_show_time = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTab_show_time = new javax.swing.JTable();
        jpan_infor_customer = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        edt_name_customer = new javax.swing.JTextField();
        btn_search_customer = new javax.swing.JToggleButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_customer = new javax.swing.JTable();
        jpan_list_movie = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btn_search_movie = new javax.swing.JToggleButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable_list_movie = new javax.swing.JTable();
        jdc_from_time = new com.toedter.calendar.JDateChooser();
        jdc_to_time = new com.toedter.calendar.JDateChooser();
        jpan_info_movie = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        edt_id_movie = new javax.swing.JTextField();
        edt_name_movie_infor = new javax.swing.JTextField();
        edt_year_of_manufacture = new javax.swing.JTextField();
        edt_min_year_of_age = new javax.swing.JTextField();
        edt_duration_movie = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        edt_content_movie = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btn_insert_new_movie = new javax.swing.JButton();
        btn_update_movie = new javax.swing.JToggleButton();
        btn_delete_movie = new javax.swing.JToggleButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_movie = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        edt_movieBlockbuster = new javax.swing.JTextField();
        edt_movie_state = new javax.swing.JTextField();
        btn_load_list_movie = new javax.swing.JToggleButton();
        jdc_star_show_time = new com.toedter.calendar.JDateChooser();
        jdc_end_show_time = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Movie Information");

        jPanel1.setBackground(java.awt.Color.decode("#ED1C24")
        );

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jpan_login_logout.setBackground(java.awt.Color.decode("#00C8F8")
        );

        lbl_username.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_username.setText("Tên đăng nhập: ");

        lbl_password.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_password.setText("Mật khẩu:");

        cb_show_password.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cb_show_password.setText("Hiện mật khẩu");
        cb_show_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_show_passwordActionPerformed(evt);
            }
        });

        btn_login.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_login.png"))); // NOI18N
        btn_login.setText("Login");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        btn_logout.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_logout.png"))); // NOI18N
        btn_logout.setText("Logout");
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpan_login_logoutLayout = new javax.swing.GroupLayout(jpan_login_logout);
        jpan_login_logout.setLayout(jpan_login_logoutLayout);
        jpan_login_logoutLayout.setHorizontalGroup(
            jpan_login_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_login_logoutLayout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addGroup(jpan_login_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpan_login_logoutLayout.createSequentialGroup()
                        .addComponent(lbl_password)
                        .addGap(62, 62, 62)
                        .addGroup(jpan_login_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb_show_password)
                            .addGroup(jpan_login_logoutLayout.createSequentialGroup()
                                .addComponent(btn_login)
                                .addGap(107, 107, 107)
                                .addComponent(btn_logout))
                            .addComponent(edt_password)))
                    .addGroup(jpan_login_logoutLayout.createSequentialGroup()
                        .addComponent(lbl_username)
                        .addGap(18, 18, 18)
                        .addComponent(edt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(346, Short.MAX_VALUE))
        );
        jpan_login_logoutLayout.setVerticalGroup(
            jpan_login_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_login_logoutLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jpan_login_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_username)
                    .addComponent(edt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jpan_login_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_password)
                    .addComponent(edt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cb_show_password)
                .addGap(30, 30, 30)
                .addGroup(jpan_login_logoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_login)
                    .addComponent(btn_logout))
                .addContainerGap(464, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Đăng nhập/ Đăng xuất", jpan_login_logout);

        jpan_showtime.setBackground(java.awt.Color.decode("#EB712F")
        );

        jLabel3.setText("Tên Phim: ");

        edt_name_movie_showtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_name_movie_showtimeActionPerformed(evt);
            }
        });

        jLabel4.setText("Tên rạp chiếu phim: ");

        btn_show_time.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_clock.png"))); // NOI18N
        btn_show_time.setText("Lịch chiếu");
        btn_show_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_show_timeActionPerformed(evt);
            }
        });

        jTab_show_time.setBackground(java.awt.Color.decode("#74AAF7")
        );
        jTab_show_time.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ngày", "Giờ", "Loại suất chiếu"
            }
        ));
        jScrollPane1.setViewportView(jTab_show_time);

        javax.swing.GroupLayout jpan_showtimeLayout = new javax.swing.GroupLayout(jpan_showtime);
        jpan_showtime.setLayout(jpan_showtimeLayout);
        jpan_showtimeLayout.setHorizontalGroup(
            jpan_showtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_showtimeLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jpan_showtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1003, Short.MAX_VALUE)
                    .addGroup(jpan_showtimeLayout.createSequentialGroup()
                        .addGroup(jpan_showtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpan_showtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(edt_name_movie_showtime, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                            .addComponent(edt_name_threater))
                        .addGap(21, 21, 21)
                        .addComponent(btn_show_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpan_showtimeLayout.setVerticalGroup(
            jpan_showtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_showtimeLayout.createSequentialGroup()
                .addGroup(jpan_showtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpan_showtimeLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jpan_showtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(edt_name_movie_showtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpan_showtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(edt_name_threater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpan_showtimeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_show_time)))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Lịch chiếu phim", jpan_showtime);

        jpan_infor_customer.setBackground(java.awt.Color.decode("#CCB8D1")
        );

        jLabel14.setText("Nhập tên: ");

        btn_search_customer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_search.png"))); // NOI18N
        btn_search_customer.setText("Tìm kiếm");
        btn_search_customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_customerActionPerformed(evt);
            }
        });

        jTable_customer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "CMMD", "Địa chỉ", "Điện thoại", "Email", "Ngày sinh", "Tồng điểm tích lũy"
            }
        ));
        jScrollPane4.setViewportView(jTable_customer);

        javax.swing.GroupLayout jpan_infor_customerLayout = new javax.swing.GroupLayout(jpan_infor_customer);
        jpan_infor_customer.setLayout(jpan_infor_customerLayout);
        jpan_infor_customerLayout.setHorizontalGroup(
            jpan_infor_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_infor_customerLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel14)
                .addGap(36, 36, 36)
                .addComponent(edt_name_customer, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(btn_search_customer, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpan_infor_customerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4))
        );
        jpan_infor_customerLayout.setVerticalGroup(
            jpan_infor_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_infor_customerLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jpan_infor_customerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(edt_name_customer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_search_customer))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Tìm kiếm thông tin khách hàng", jpan_infor_customer);

        jpan_list_movie.setBackground(java.awt.Color.decode("#DBA72E")
        );

        jLabel15.setText("Thời gian:");

        jLabel16.setText("Từ: ");

        jLabel17.setText("Đến: ");

        btn_search_movie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_search_movie.png"))); // NOI18N
        btn_search_movie.setText("Search");
        btn_search_movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_movieActionPerformed(evt);
            }
        });

        jTable_list_movie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Thứ tự", "Tên", "Tổng số vé"
            }
        ));
        jScrollPane5.setViewportView(jTable_list_movie);

        javax.swing.GroupLayout jpan_list_movieLayout = new javax.swing.GroupLayout(jpan_list_movie);
        jpan_list_movie.setLayout(jpan_list_movieLayout);
        jpan_list_movieLayout.setHorizontalGroup(
            jpan_list_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_list_movieLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jpan_list_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addGap(28, 28, 28)
                .addGroup(jpan_list_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jdc_from_time, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(jdc_to_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_search_movie, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(jpan_list_movieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpan_list_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpan_list_movieLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpan_list_movieLayout.setVerticalGroup(
            jpan_list_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_list_movieLayout.createSequentialGroup()
                .addGroup(jpan_list_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpan_list_movieLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel15))
                    .addGroup(jpan_list_movieLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jpan_list_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jdc_from_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jpan_list_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jdc_to_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpan_list_movieLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btn_search_movie)))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Danh sách bộ phim ăn khách", jpan_list_movie);

        jpan_info_movie.setBackground(java.awt.Color.decode("#C2BC74")
        );
        jpan_info_movie.setForeground(java.awt.Color.decode("#775BA3")
        );

        jLabel5.setText("Mã: ");

        jLabel6.setText("Tên: ");

        jLabel7.setText("Năm sản xuất: ");

        jLabel8.setText("Độ tuổi xem phim: ");

        jLabel9.setText("Thời gian chiếu: ");

        jLabel10.setText("Thời lượng phim: ");

        jLabel11.setText("Nội dung phim: ");

        edt_name_movie_infor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_name_movie_inforActionPerformed(evt);
            }
        });

        edt_year_of_manufacture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_year_of_manufactureActionPerformed(evt);
            }
        });

        edt_duration_movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_duration_movieActionPerformed(evt);
            }
        });

        edt_content_movie.setColumns(20);
        edt_content_movie.setRows(5);
        jScrollPane2.setViewportView(edt_content_movie);

        jLabel12.setText("Bắt đầu: ");

        jLabel13.setText("Kết thúc: ");

        btn_insert_new_movie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_add.png"))); // NOI18N
        btn_insert_new_movie.setText("Insert New Movie");
        btn_insert_new_movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insert_new_movieActionPerformed(evt);
            }
        });

        btn_update_movie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/ic_update.png"))); // NOI18N
        btn_update_movie.setText("Update Movie");
        btn_update_movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_update_movieActionPerformed(evt);
            }
        });

        btn_delete_movie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_delete.png"))); // NOI18N
        btn_delete_movie.setText("Delete Movie");
        btn_delete_movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_movieActionPerformed(evt);
            }
        });

        jTable_movie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên", "Năm sản xuất", "Bắt đầu chiếu", "Kết thúc chiếu", "Độ tuổi", "Thời lượng", "Bom tấn", "Tình trạng", "Nội dung"
            }
        ));
        jTable_movie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_movieMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_movie);

        jLabel1.setText("Bom tấn: ");

        jLabel2.setText("Tình trạng: ");

        edt_movieBlockbuster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edt_movieBlockbusterActionPerformed(evt);
            }
        });

        btn_load_list_movie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_reset.png"))); // NOI18N
        btn_load_list_movie.setText("Load List Movie");
        btn_load_list_movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_load_list_movieActionPerformed(evt);
            }
        });

        jdc_star_show_time.setDateFormatString("dd-MMM-yyyy");

        jdc_end_show_time.setDateFormatString("dd-MMM-yyyy");

        javax.swing.GroupLayout jpan_info_movieLayout = new javax.swing.GroupLayout(jpan_info_movie);
        jpan_info_movie.setLayout(jpan_info_movieLayout);
        jpan_info_movieLayout.setHorizontalGroup(
            jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_info_movieLayout.createSequentialGroup()
                .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addGroup(jpan_info_movieLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11))))
                .addGap(22, 22, 22)
                .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(edt_duration_movie)
                        .addComponent(edt_year_of_manufacture)
                        .addComponent(edt_name_movie_infor)
                        .addComponent(edt_id_movie)
                        .addComponent(edt_min_year_of_age)
                        .addGroup(jpan_info_movieLayout.createSequentialGroup()
                            .addComponent(edt_movieBlockbuster, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(128, 128, 128)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(edt_movie_state, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                        .addGroup(jpan_info_movieLayout.createSequentialGroup()
                            .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jdc_star_show_time, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(68, 68, 68)
                            .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13)
                                .addComponent(jdc_end_show_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_delete_movie, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btn_update_movie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_load_list_movie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_insert_new_movie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)))
                .addGap(0, 82, Short.MAX_VALUE))
            .addGroup(jpan_info_movieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jpan_info_movieLayout.setVerticalGroup(
            jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpan_info_movieLayout.createSequentialGroup()
                .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpan_info_movieLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(edt_id_movie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edt_name_movie_infor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edt_year_of_manufacture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jpan_info_movieLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btn_load_list_movie)))
                .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpan_info_movieLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edt_min_year_of_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdc_star_show_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdc_end_show_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpan_info_movieLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btn_insert_new_movie)))
                .addGap(18, 18, 18)
                .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpan_info_movieLayout.createSequentialGroup()
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edt_duration_movie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(edt_movieBlockbuster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(edt_movie_state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpan_info_movieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpan_info_movieLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(95, 95, 95))
                            .addComponent(jScrollPane2)))
                    .addGroup(jpan_info_movieLayout.createSequentialGroup()
                        .addComponent(btn_update_movie)
                        .addGap(18, 18, 18)
                        .addComponent(btn_delete_movie)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Thông tin bộ phim mới", jpan_info_movie);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void edt_name_movie_showtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_name_movie_showtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edt_name_movie_showtimeActionPerformed

    private void edt_duration_movieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_duration_movieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edt_duration_movieActionPerformed

    private void edt_year_of_manufactureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_year_of_manufactureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edt_year_of_manufactureActionPerformed

    private void edt_name_movie_inforActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_name_movie_inforActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edt_name_movie_inforActionPerformed

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        // TODO add your handling code here:
        String strUser = edt_username.getText().toString().trim();
        String strPassword = edt_password.getText().toString().trim();
        if (strUser.length() == 0) {
            JOptionPane.showMessageDialog(null, "User is empty, enter user.");
        } else if (strPassword.length() == 0) {
            JOptionPane.showMessageDialog(null, ", Password is empty, enter password.");
        } else if (strUser.length() == 0 && strPassword.length() == 0) {
            JOptionPane.showMessageDialog(null, "User and password is empty, enter user and password.");
        } else {
            mConnection = ConnectDatabase.ConnectDb(strUser, strPassword);
            if (mConnection != null) {

                lbl_username.setVisible(false);
                lbl_password.setVisible(false);
                edt_username.setVisible(false);
                edt_password.setVisible(false);
                btn_login.setVisible(false);
                cb_show_password.setVisible(false);
                JOptionPane.showMessageDialog(null, "Login success.");
            } else {
                JOptionPane.showMessageDialog(null, "Login fail.");
            }
        }
    }//GEN-LAST:event_btn_loginActionPerformed

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        // TODO add your handling code here:
        if (mConnection != null) {
            lbl_username.setVisible(true);
            lbl_password.setVisible(true);
            edt_username.setVisible(true);
            edt_password.setVisible(true);
            btn_login.setVisible(true);
            cb_show_password.setVisible(true);
            edt_username.setText("");
            edt_password.setText("");
        }
        mConnection = null;
        ConnectDatabase.mConnectDatabase = null;
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void btn_show_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_show_timeActionPerformed
        // TODO add your handling code here:
        ArrayList<Showtimes> arrShowTime;
        String strNameMovie = edt_name_movie_showtime.getText().toString().trim();
        String strNameThreate = edt_name_threater.getText().toString().trim();
        if (strNameMovie.length() == 0) {
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên phim.");
        } else if (strNameThreate.length() == 0) {
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên rạp");
        } else {
            arrShowTime = ConnectDatabase.getShowTime(strNameMovie, strNameThreate);
            if (arrShowTime.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Không có lịch chiếu của bộ " + strNameMovie + " tại " + strNameThreate);
            } else {
                DefaultTableModel modelTableShowTime = (DefaultTableModel) jTab_show_time.getModel();
                modelTableShowTime.setRowCount(0);
                Object[] rowTableShowTime = new Object[3];
                for (int i = 0; i < arrShowTime.size(); i++) {
                    String strTime = arrShowTime.get(i).getDate().trim();
                    String[] parts = strTime.split("\\s+");
                    rowTableShowTime[0] = Util.convertTime3(parts[0]);
                    rowTableShowTime[1] = parts[1].substring(0, 5);
                    rowTableShowTime[2] = arrShowTime.get(i).getType();
                    modelTableShowTime.addRow(rowTableShowTime);
                }
            }
        }
    }//GEN-LAST:event_btn_show_timeActionPerformed

    private void edt_movieBlockbusterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edt_movieBlockbusterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edt_movieBlockbusterActionPerformed

    private void btn_load_list_movieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_load_list_movieActionPerformed
        // TODO add your handling code here:
        ArrayList<Movie> arrListMovie;
        arrListMovie = ConnectDatabase.getListMovie();
        if (arrListMovie.size() == 0 && mConnection != null) {
            JOptionPane.showMessageDialog(null, "Không có bộ phim nào trong cơ sở dữ liệu");
        } else {
            DefaultTableModel modelTableListMovie = (DefaultTableModel) jTable_movie.getModel();
            modelTableListMovie.setRowCount(0);
            Object[] rowTableListMovie = new Object[10];
            for (int i = 0; i < arrListMovie.size(); i++) {
                rowTableListMovie[0] = arrListMovie.get(i).getID();
                rowTableListMovie[1] = arrListMovie.get(i).getNameMovie();
                rowTableListMovie[2] = arrListMovie.get(i).getYearOfManufacture();
                rowTableListMovie[3] = Util.convertTime1(arrListMovie.get(i).getTimeShowStart());
                rowTableListMovie[4] = Util.convertTime1(arrListMovie.get(i).getTimeShowEnd());
                rowTableListMovie[5] = arrListMovie.get(i).getMinYearOfAge();
                rowTableListMovie[6] = arrListMovie.get(i).getMovieDuration();
                rowTableListMovie[7] = arrListMovie.get(i).getMovieBlockbuster();
                rowTableListMovie[8] = arrListMovie.get(i).getMovieState();
                rowTableListMovie[9] = arrListMovie.get(i).getMovieContent();

                modelTableListMovie.addRow(rowTableListMovie);
            }
        }

    }//GEN-LAST:event_btn_load_list_movieActionPerformed

    private void btn_update_movieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_update_movieActionPerformed
        // TODO add your handling code here:
        if (checkInput() && edt_id_movie.getText() != null) {
            if (mConnection != null) {
                String updateQuery = "UPDATE PHIM SET TENPHIM = ?, NAMSX = ?, THOILUONG = ?, NOIDUNG = ?, TUOITOITHIEU = ?, TIMEBEGIN = ?, "
                        + "TIMEFINISH = ?, BOMTAN = ?, TINHTRANG = ? WHERE MAPHIM = ?";
                try {
                    PreparedStatement ps = mConnection.prepareStatement(updateQuery);

                    ps.setString(1, edt_name_movie_infor.getText());
                    ps.setString(2, edt_year_of_manufacture.getText());
                    ps.setString(3, edt_duration_movie.getText());
                    ps.setString(4, edt_content_movie.getText());
                    ps.setInt(5, Integer.parseInt(edt_min_year_of_age.getText()));

                    java.sql.Date sqlStartDate = new java.sql.Date(jdc_star_show_time.getDate().getTime());
                    java.sql.Date sqlEndDate = new java.sql.Date(jdc_end_show_time.getDate().getTime());
                    ps.setDate(6, sqlStartDate);
                    ps.setDate(7, sqlEndDate);

                    ps.setString(8, edt_movieBlockbuster.getText());
                    ps.setString(9, edt_movie_state.getText());
                    ps.setString(10, edt_id_movie.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Update dữ liệu thành công.");
                    clearInput();
                } catch (SQLException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Bạn chưa đăng nhập.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chưa điền đủ thông tin.");

        }
    }//GEN-LAST:event_btn_update_movieActionPerformed

    private void btn_delete_movieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_movieActionPerformed
        // TODO add your handling code here:
        if (!edt_id_movie.getText().equals("")) {
            if (mConnection != null) {
                String strQuery = "DELETE FROM PHIM WHERE MAPHIM = ?";
                try {
                    PreparedStatement ps = mConnection.prepareStatement(strQuery);
                    ps.setString(1, edt_id_movie.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Xóa dữ liệu thành công.");
                    clearInput();
                } catch (SQLException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Bạn chưa đăng nhập.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã bộ phim cần xóa.");
        }
    }//GEN-LAST:event_btn_delete_movieActionPerformed

    private void btn_insert_new_movieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insert_new_movieActionPerformed
        // TODO add your handling code here:
        if (!checkInput()) {
            JOptionPane.showMessageDialog(null, "Bạn chưa điền đủ thông tin.");
        } else {
            if (mConnection != null) {
                try {
                    PreparedStatement ps = mConnection.prepareStatement("INSERT INTO PHIM(MAPHIM, TENPHIM, NAMSX, THOILUONG,"
                            + " NOIDUNG, TUOITOITHIEU, TIMEBEGIN, TIMEFINISH, BOMTAN, TINHTRANG)"
                            + "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                    ps.setString(1, edt_id_movie.getText());
                    ps.setString(2, edt_name_movie_infor.getText());
                    ps.setString(3, edt_year_of_manufacture.getText());
                    ps.setString(4, edt_duration_movie.getText());
                    ps.setString(5, edt_content_movie.getText());
                    ps.setInt(6, Integer.parseInt(edt_min_year_of_age.getText()));

                    java.sql.Date sqlStartDate = new java.sql.Date(jdc_star_show_time.getDate().getTime());
                    java.sql.Date sqlEndDate = new java.sql.Date(jdc_end_show_time.getDate().getTime());
                    ps.setDate(7, sqlStartDate);
                    ps.setDate(8, sqlEndDate);

                    ps.setString(9, edt_movieBlockbuster.getText());
                    ps.setString(10, edt_movie_state.getText());

                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Dữ liệu đã insert thành công.");
                    clearInput();
                } catch (SQLException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa đăng nhập.");
            }
        }

    }//GEN-LAST:event_btn_insert_new_movieActionPerformed

    private void jTable_movieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_movieMouseClicked
        // TODO add your handling code here:
        int index = jTable_movie.getSelectedRow();
        TableModel model = jTable_movie.getModel();
        edt_id_movie.setText(model.getValueAt(index, 0).toString());
        edt_name_movie_infor.setText(model.getValueAt(index, 1).toString());
        edt_year_of_manufacture.setText(model.getValueAt(index, 2).toString());
        edt_min_year_of_age.setText(model.getValueAt(index, 5).toString());
        edt_duration_movie.setText(model.getValueAt(index, 6).toString());
        edt_movieBlockbuster.setText(model.getValueAt(index, 7).toString());
        edt_movie_state.setText(model.getValueAt(index, 8).toString());
        edt_content_movie.setText(model.getValueAt(index, 9).toString());

        try {
            Date startDate = null;
            Date endDate = null;
            String strStartTime = Util.convertTime2(model.getValueAt(index, 3).toString());
            String strEndTime = Util.convertTime2(model.getValueAt(index, 4).toString());
            SimpleDateFormat format = new SimpleDateFormat("dd-MMM-yyyy");
            startDate = format.parse(strStartTime);
            endDate = format.parse(strEndTime);
            jdc_star_show_time.setDate(startDate);
            jdc_end_show_time.setDate(endDate);
        } catch (ParseException ex) {
            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable_movieMouseClicked

    private void btn_search_customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_customerActionPerformed
        // TODO add your handling code here:
        if (mConnection != null) {
            String strNameCustomer = edt_name_customer.getText().toString();
            ArrayList<User> arrListCustomer = ConnectDatabase.getListUser(strNameCustomer);
            if (arrListCustomer.size() == 0) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy khách hàng.");

            } else {
                DefaultTableModel modelTableListCustomer = (DefaultTableModel) jTable_customer.getModel();
                modelTableListCustomer.setRowCount(0);
                Object[] rowTableListCustomer = new Object[7];
                for (int i = 0; i < arrListCustomer.size(); i++) {
                    rowTableListCustomer[0] = arrListCustomer.get(i).getUserName();
                    rowTableListCustomer[1] = arrListCustomer.get(i).getID();
                    rowTableListCustomer[2] = arrListCustomer.get(i).getAddress();
                    rowTableListCustomer[3] = arrListCustomer.get(i).getNumberPhone();
                    rowTableListCustomer[4] = arrListCustomer.get(i).getEmail();
                    rowTableListCustomer[5] = Util.convertTime1(arrListCustomer.get(i).getBirthday());
                    rowTableListCustomer[6] = arrListCustomer.get(i).getTotalPoint();
                    
                    modelTableListCustomer.addRow(rowTableListCustomer);
                }
            }
            // clear field name customer
            edt_name_customer.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Bạn chưa đăng nhập.");
        }
    }//GEN-LAST:event_btn_search_customerActionPerformed

    private void cb_show_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_show_passwordActionPerformed
        // TODO add your handling code here:
        if (cb_show_password.isSelected()) {
            edt_password.setEchoChar((char) 0);
        } else {
            edt_password.setEchoChar('*');
        }
    }//GEN-LAST:event_cb_show_passwordActionPerformed

    private void btn_search_movieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_movieActionPerformed
        // TODO add your handling code here:
        ArrayList<ListMovieSeller> arrListMovieSellers;
        java.sql.Date sqlStartDate = new java.sql.Date(jdc_from_time.getDate().getTime());
        java.sql.Date sqlEndDate = new java.sql.Date(jdc_to_time.getDate().getTime());
        if (jdc_from_time == null || jdc_to_time == null) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn thiếu thời gian.");
        } else if (sqlStartDate.after(sqlEndDate)) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn không đúng thời gian.");
        } else {
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            String startTime = df.format(sqlStartDate);
            String endTime = df.format(sqlEndDate);
            arrListMovieSellers = ConnectDatabase.getListMovieSeller(startTime, endTime);
            if (arrListMovieSellers.size() == 0) {
                JOptionPane.showMessageDialog(null, "Không có bộ phim nào.");
            } else {
                DefaultTableModel modelTableListMovie = (DefaultTableModel) jTable_list_movie.getModel();
                modelTableListMovie.setRowCount(0);
                Object[] rowTableListMovie = new Object[3];
                for (int i = 0; i < arrListMovieSellers.size(); i++) {
                    rowTableListMovie[0] = i + 1;
                    rowTableListMovie[1] = arrListMovieSellers.get(i).getNameMovie();
                    rowTableListMovie[2] = arrListMovieSellers.get(i).getTotalSellTicket();
                    modelTableListMovie.addRow(rowTableListMovie);
                }
            }
        }
    }//GEN-LAST:event_btn_search_movieActionPerformed

    /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_delete_movie;
    private javax.swing.JButton btn_insert_new_movie;
    private javax.swing.JToggleButton btn_load_list_movie;
    private javax.swing.JToggleButton btn_login;
    private javax.swing.JToggleButton btn_logout;
    private javax.swing.JToggleButton btn_search_customer;
    private javax.swing.JToggleButton btn_search_movie;
    private javax.swing.JToggleButton btn_show_time;
    private javax.swing.JToggleButton btn_update_movie;
    private javax.swing.JCheckBox cb_show_password;
    private javax.swing.JTextArea edt_content_movie;
    private javax.swing.JTextField edt_duration_movie;
    private javax.swing.JTextField edt_id_movie;
    private javax.swing.JTextField edt_min_year_of_age;
    private javax.swing.JTextField edt_movieBlockbuster;
    private javax.swing.JTextField edt_movie_state;
    private javax.swing.JTextField edt_name_customer;
    private javax.swing.JTextField edt_name_movie_infor;
    private javax.swing.JTextField edt_name_movie_showtime;
    private javax.swing.JTextField edt_name_threater;
    private javax.swing.JPasswordField edt_password;
    private javax.swing.JTextField edt_username;
    private javax.swing.JTextField edt_year_of_manufacture;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTab_show_time;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable_customer;
    private javax.swing.JTable jTable_list_movie;
    private javax.swing.JTable jTable_movie;
    private com.toedter.calendar.JDateChooser jdc_end_show_time;
    private com.toedter.calendar.JDateChooser jdc_from_time;
    private com.toedter.calendar.JDateChooser jdc_star_show_time;
    private com.toedter.calendar.JDateChooser jdc_to_time;
    private javax.swing.JPanel jpan_info_movie;
    private javax.swing.JPanel jpan_infor_customer;
    private javax.swing.JPanel jpan_list_movie;
    private javax.swing.JPanel jpan_login_logout;
    private javax.swing.JPanel jpan_showtime;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JLabel lbl_username;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icon/ic_movies.png")));
    }
}
